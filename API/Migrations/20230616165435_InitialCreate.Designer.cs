// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20230616165435_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("API.Customer", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "customer1",
                            rut = "20.416.853-9"
                        },
                        new
                        {
                            id = 2,
                            name = "customer2",
                            rut = "12.613.809-1"
                        });
                });

            modelBuilder.Entity("API.Dish", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Dishes");

                    b.HasData(
                        new
                        {
                            id = 1,
                            name = "Pollo con papas",
                            price = 8000
                        },
                        new
                        {
                            id = 2,
                            name = "Cazuela",
                            price = 5000
                        });
                });

            modelBuilder.Entity("API.Purchase", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("customer_id")
                        .HasColumnType("int");

                    b.Property<int>("dish_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("Purchases");

                    b.HasData(
                        new
                        {
                            id = 1,
                            created_at = new DateTime(2023, 6, 9, 12, 54, 35, 152, DateTimeKind.Local).AddTicks(4449),
                            customer_id = 1,
                            dish_id = 1,
                            updated_at = new DateTime(2023, 6, 9, 12, 54, 35, 152, DateTimeKind.Local).AddTicks(4497)
                        },
                        new
                        {
                            id = 2,
                            created_at = new DateTime(2023, 3, 8, 12, 54, 35, 152, DateTimeKind.Local).AddTicks(4500),
                            customer_id = 1,
                            dish_id = 2,
                            updated_at = new DateTime(2023, 3, 8, 12, 54, 35, 152, DateTimeKind.Local).AddTicks(4501)
                        },
                        new
                        {
                            id = 3,
                            created_at = new DateTime(2023, 6, 6, 12, 54, 35, 152, DateTimeKind.Local).AddTicks(4503),
                            customer_id = 2,
                            dish_id = 1,
                            updated_at = new DateTime(2023, 6, 6, 12, 54, 35, 152, DateTimeKind.Local).AddTicks(4505)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
